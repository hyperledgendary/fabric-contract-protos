// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package contract;

option go_package = "https://github.com/hyperledgendary/fabric-ledger-protos-go/contract";

import "google/protobuf/timestamp.proto";

import "common_messages.proto";

message Collection {
  string name = 1;
}

message State {
  string key = 1;
  bytes value = 2;
}

message StateHistory {
  string key = 1;
  bytes value = 2;
  string transaction_id = 3;
  google.protobuf.Timestamp timestamp = 4;
  bool is_delete = 5;
}

message KeyRangeQuery {
  string start_key = 1;
  string end_key = 2;
}

message RichQuery { }

message CreateStateRequest {
  TransactionContext context = 1;
  Collection collection = 2;
  State state = 3;
}

message CreateStateResponse { }

message ReadStateRequest {
  TransactionContext context = 1;
  Collection collection = 2;
  string state_key = 3;
}

message ReadStateResponse {
  State state = 1;
}

message UpdateStateRequest {
  TransactionContext context = 1;
  Collection collection = 2;
  State state = 3;
}

message UpdateStateResponse { }

message DeleteStateRequest {
  TransactionContext context = 1;
  Collection collection = 2;
  string state_key = 3;
}

message DeleteStateResponse { }

message ExistsStateRequest {
  TransactionContext context = 1;
  Collection collection = 2;
  string state_key = 3;
}

message ExistsStateResponse {
  bool exists = 1;
}

message GetStatesRequest {
  TransactionContext context = 1;
  Collection collection = 2;
  oneof query {
    KeyRangeQuery by_key_range = 3;
    RichQuery by_rich_query = 4;
  }
}

message GetStatesResponse {
  repeated State states = 1;
}

message EndorsementPrincipal {
  string msp_id = 1;
  enum Role {
    MEMBER = 0;
    ADMIN = 1;
    CLIENT = 2;
    PEER = 3;
  }
  Role role = 2;
}

message EndorsementRule {
  int32 min_endorsements = 1;
  repeated EndorsementPrincipal principals = 2;
  repeated EndorsementRule rules = 3;
}

message EndorsementPolicy {
  EndorsementRule rule = 1;
}

message GetEndorsementPolicyRequest {
  TransactionContext context = 1;
  Collection collection = 2;
  string state_key = 3;
}

message GetEndorsementPolicyResponse {
  EndorsementPolicy policy = 1;
}

message SetEndorsementPolicyRequest {
  TransactionContext context = 1;
  Collection collection = 2;
  string state_key = 3;
  EndorsementPolicy policy = 4;
}

message SetEndorsementPolicyResponse {
}
